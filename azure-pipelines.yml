trigger:
  branches:
    include:
      - main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  acrsecret: mysecret

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool: mypool
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'acr-svc'
        repository: 'sank64cr'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/k8s'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy
    pool: mypool 
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        targetPath: '$(Pipeline.Workspace)/manifests'
    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'myAKSCLuster'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: '$(acrsecret)'
        dockerRegistryEndpoint: 'acr-svc'
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'myAKSCLuster'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/manifests/pvc.yml
          $(Pipeline.Workspace)/manifests/env-config.yml
          $(Pipeline.Workspace)/manifests/db-microservice.yml
          $(Pipeline.Workspace)/manifests/api-microservice.yml 
          $(Pipeline.Workspace)/manifests/api-lb.yml